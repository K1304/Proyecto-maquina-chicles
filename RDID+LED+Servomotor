#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>
int LEDR = 3;
int LEDG = 4;

Servo servoMotor;

#define RST_PIN  9    // sets pin 9 for reseting the RC522
#define SS_PIN  10   // sets pin 10 for SS (SDA) of the RC522
MFRC522 mfrc522(SS_PIN, RST_PIN); // create the RC522 object


void setup() 

{
  Serial.begin(9600); //begin the serial com
  SPI.begin();        //iniciate the SPI bus
  mfrc522.PCD_Init(); // Iniciate the RC522 
  pinMode (LEDR, OUTPUT);   // set pin 3 as output
    pinMode (LEDG, OUTPUT);   // set pin 4 as output  
    digitalWrite (LEDR , HIGH);  // set pin 3 output as HIGH
    digitalWrite (LEDG , LOW);  // set pin 4 output as LOW
  Serial.println ("Control de acceso:");
  servoMotor.attach (5); //define servo pin as 5
  servoMotor.write (0) // set servo position as 0ยบ
}

byte ActualUID[4]; // stores the RFID tag ID number
byte Usuario1[4]= {0xD9, 0x84, 0xc4, 0x98} ; // ID of User1 
byte Usuario2[4]= {0x49, 0x1A, 0x91, 0x0E} ; // ID of User2

void loop() 
{
  
  // Start decting if new card is near the RFID chip

  if ( mfrc522.PICC_IsNewCardPresent()) 
        {  
      //select a card ID

            if ( mfrc522.PICC_ReadCardSerial()) 
            {
                  // send the card IUD 

                  Serial.print(F("Card UID:"));
                  for (byte i = 0; i < mfrc522.uid.size; i++) 
                       {
                          Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
                          Serial.print(mfrc522.uid.uidByte[i], HEX);   
                          ActualUID[i]=mfrc522.uid.uidByte[i];              
                        } 
                        
                  Serial.print("     ");                 
                  //compare IUD for matches in the Users 

                  if(compareArray(ActualUID,Usuario1))
                    {
                     Serial.println ("Acceso concedido...");
                     digitalWrite (LEDG , HIGH);     //If ID correct, sets LEDG as HIGH 
                     digitalWrite (LEDR , LOW);      //and LEDR as low  
                     servoMotor.write(90);           // moves the servo 90 degrees
                     delay (2000);                   //waits 2s
                     digitalWrite (LEDR , HIGH);     //set LEDR as HIGH
                     servoMotor.write(0);            //moves the servo to 0
                     digitalWrite (LEDG , LOW);      //set LEDG as LOW 
                    }

                  else if(compareArray(ActualUID,Usuario2))
                   {
                      Serial.println ("Acceso concedido...");
                     digitalWrite (LEDG , HIGH);     //If ID correct, sets LEDG as HIGH 
                     digitalWrite (LEDR , LOW);      //and LEDR as low  
                     servoMotor.write(90);
                     delay (2000); // waits 2s
                     digitalWrite (LEDR , HIGH); //set LEDR as HIGH
                     servoMotor.write(0);
                     digitalWrite (LEDG , LOW); //set LEDG as LOW 
                   }

                  else
                   { 
                     Serial.println("Acceso denegado..."); // If ID incorrect
                     for (int i = 0; i < 4; i++); 
                     digitalWrite(LEDR,HIGH);
                     delay(1000);
                     digitalWrite(LEDR,LOW); // LEDR blinks 4 times 
                    }

                    
                  // finish the actual tag reading 
                  mfrc522.PICC_HaltA();

            }

  }

}

//function for cheking ID
 boolean compareArray(byte array1[],byte array2[])
{
  if(array1[0] != array2[0])return(false);
  if(array1[1] != array2[1])return(false);
  if(array1[2] != array2[2])return(false);
  if(array1[3] != array2[3])return(false);
  return(true);
}
